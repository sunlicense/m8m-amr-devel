// Generated by gencpp from file htbot/mqueue.msg
// DO NOT EDIT!


#ifndef HTBOT_MESSAGE_MQUEUE_H
#define HTBOT_MESSAGE_MQUEUE_H

#include <ros/service_traits.h>


#include <htbot/mqueueRequest.h>
#include <htbot/mqueueResponse.h>


namespace htbot
{

struct mqueue
{

typedef mqueueRequest Request;
typedef mqueueResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct mqueue
} // namespace htbot


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::htbot::mqueue > {
  static const char* value()
  {
    return "688bcf05bb0a3ea18504032392975cc6";
  }

  static const char* value(const ::htbot::mqueue&) { return value(); }
};

template<>
struct DataType< ::htbot::mqueue > {
  static const char* value()
  {
    return "htbot/mqueue";
  }

  static const char* value(const ::htbot::mqueue&) { return value(); }
};


// service_traits::MD5Sum< ::htbot::mqueueRequest> should match 
// service_traits::MD5Sum< ::htbot::mqueue > 
template<>
struct MD5Sum< ::htbot::mqueueRequest>
{
  static const char* value()
  {
    return MD5Sum< ::htbot::mqueue >::value();
  }
  static const char* value(const ::htbot::mqueueRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::htbot::mqueueRequest> should match 
// service_traits::DataType< ::htbot::mqueue > 
template<>
struct DataType< ::htbot::mqueueRequest>
{
  static const char* value()
  {
    return DataType< ::htbot::mqueue >::value();
  }
  static const char* value(const ::htbot::mqueueRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::htbot::mqueueResponse> should match 
// service_traits::MD5Sum< ::htbot::mqueue > 
template<>
struct MD5Sum< ::htbot::mqueueResponse>
{
  static const char* value()
  {
    return MD5Sum< ::htbot::mqueue >::value();
  }
  static const char* value(const ::htbot::mqueueResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::htbot::mqueueResponse> should match 
// service_traits::DataType< ::htbot::mqueue > 
template<>
struct DataType< ::htbot::mqueueResponse>
{
  static const char* value()
  {
    return DataType< ::htbot::mqueue >::value();
  }
  static const char* value(const ::htbot::mqueueResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HTBOT_MESSAGE_MQUEUE_H
